services:
  viva:
    build: .
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.viva.tls=true"
      - "traefik.http.routers.viva.rule=Host(`viva.docker.localhost`)"
    networks:
      - proxy

  api:
    build:
      context: ./api/
      dockerfile: Dockerfile
    environment:
      - DB_USERNAME=root
      - DB_PASSWORD=example
      - DB_NAME=
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_SRV=false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.rule=Host(`api.docker.localhost`)"
    networks:
      - proxy

  mongodb:
    image: mongo:6.0.5
    restart: on-failure
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    networks:
      - proxy

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_BASICAUTH_USERNAME=viva
      - ME_CONFIG_BASICAUTH_PASSWORD=viva
    depends_on:
      - mongodb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mongo-express.tls=true"
      - "traefik.http.routers.mongo-express.rule=Host(`mongo-express.docker.localhost`)"
    networks:
      - proxy

  reverse-proxy:
    image: traefik:v2.3
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${HOME}/.certs:/etc/certs:ro
      - ${HOME}/.traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ${HOME}/.traefik/config.yml:/etc/traefik/config.yml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
    networks:
      - proxy

networks:
  proxy:
    external: true
